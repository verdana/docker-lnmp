version: '3.5'
services:
    nginx:
        container_name: "docker-nginx"
        image: nginx:alpine
        ports:
            - 80:80
            - 443:443
        volumes:
            - $PWD/public:/var/www/html:rw,cached
            - $PWD/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro,cached
            - $PWD/nginx/logs:/var/log/nginx:rw,cached
        links:
            - php:php
        environment:
            - TZ=Asia/Shanghai
        networks:
            backend:
                ipv4_address: ${NGINX_IP}

    php:
        container_name: "docker-php"
        image: verdana/php:latest
        #        build:
        #    context: ./php
        volumes:
            - $PWD/public:/var/www/html
        links:
            - mysql:mysql
            - redis:redis
        networks:
            backend:
                ipv4_address: ${PHP72_IP}

    mysql:
        container_name: "docker-mysql"
        image: mysql:5.7
        ports:
            - 3306:3306
        volumes:
            - $PWD/mysql/data:/var/lib/mysql:rw,cached
            - $PWD/mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro,cached
            - $PWD/mysql/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf:ro,cached
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        networks:
            backend:
                ipv4_address: ${MYSQL_IP}

    redis:
        container_name: "docker-redis"
        image: redis:latest
        command: ["redis-server", "/etc/redis.conf"]
        ports:
            - 6379:6379
        volumes:
            - $PWD/redis/redis.conf:/etc/redis.conf
        sysctls:
            net.core.somaxconn: 512
        networks:
            backend:
                ipv4_address: ${REDIS_IP}

    portainer:
        container_name: "docker-port"
        image: portainer/portainer:latest
        ports:
            - 9000:9000
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:cached
            - $PWD/portainer/:/data:cached
        networks:
            backend:
                ipv4_address: ${PORTAINER_IP}

networks:
    backend:
        name: nmp-net
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: "${DOCKER_SUBNET}"

